#!/bin/bash

# ===============================
# üöÄ Company PostgreSQL Setup
# ===============================

# === 1Ô∏è‚É£ R√©seau Docker ===
echo "‚úÖ V√©rification du r√©seau Docker..."
if ! docker network ls | grep -q "company-network"; then
  docker network create company-network
  echo "‚úÖ R√©seau 'company-network' cr√©√©."
else
  echo "‚úÖ R√©seau 'company-network' d√©j√† existant."
fi

# === 2Ô∏è‚É£ Pr√©parer le volume ===
echo "‚úÖ Pr√©paration dossier ./data"
mkdir -p ./data

# === 3Ô∏è‚É£ D√©ployer le conteneur ===
echo "‚úÖ D√©ploiement du conteneur company-db"
docker run -d \
  --name company-db \
  --network="company-network" \
  -e POSTGRES_USER=company-sysadmin \
  -e POSTGRES_PASSWORD="M0tDePasseUltraSecure" \
  -p 5432:5432 \
  -v $(pwd)/data:/var/lib/postgresql/data \
  --restart unless-stopped \
  postgres:15

# === 4Ô∏è‚É£ Attendre que Postgres init ===
echo "‚è≥ Attente de l'init de la base (5s)..."
sleep 5

# === 5Ô∏è‚É£ Remplacer postgresql.conf ===
echo "‚úÖ Application de la conf optimis√©e..."
CONF_PATH="./data/postgresql.conf"

cat <<EOF > $CONF_PATH
# üöÄ Company Optimized postgresql.conf

max_connections = 1000
shared_buffers = 48GB
work_mem = 64MB
maintenance_work_mem = 2GB
effective_cache_size = 144GB

min_wal_size = 4GB
max_wal_size = 16GB
checkpoint_completion_target = 0.9
wal_buffers = -1

default_statistics_target = 100
random_page_cost = 1.1
effective_io_concurrency = 200
EOF

echo "‚úÖ Nouvelle conf √©crite dans $CONF_PATH"

# === 6Ô∏è‚É£ Red√©marrer le conteneur ===
echo "‚ôªÔ∏è Restart du conteneur pour appliquer les r√©glages..."
docker restart company-db

# === 7Ô∏è‚É£ V√©rifier ===
echo "‚úÖ V√©rification de la conf Postgres..."
docker exec -it company-db psql -U company-sysadmin -d postgres -c "SHOW ALL;" | grep -E 'max_connections|shared_buffers|work_mem|maintenance_work_mem|min_wal_size|max_wal_size|checkpoint_completion_target|wal_buffers'

echo "üéâ Setup PostgreSQL Company boost√© termin√© !"
